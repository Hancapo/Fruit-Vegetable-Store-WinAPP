//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TiendaVerduras.ValidacionLogin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ValidacionLogin.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerificarAcceso", ReplyAction="http://tempuri.org/IService/VerificarAccesoResponse")]
        bool VerificarAcceso(string nombreusuario, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/VerificarAcceso", ReplyAction="http://tempuri.org/IService/VerificarAccesoResponse")]
        System.Threading.Tasks.Task<bool> VerificarAccesoAsync(string nombreusuario, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearUsuario", ReplyAction="http://tempuri.org/IService/CrearUsuarioResponse")]
        bool CrearUsuario(string email, string pass, string user, string TipoU, string run, string telefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearUsuario", ReplyAction="http://tempuri.org/IService/CrearUsuarioResponse")]
        System.Threading.Tasks.Task<bool> CrearUsuarioAsync(string email, string pass, string user, string TipoU, string run, string telefono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraerDato", ReplyAction="http://tempuri.org/IService/TraerDatoResponse")]
        string TraerDato(string dato, string tipo, string valor, string tabla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraerDato", ReplyAction="http://tempuri.org/IService/TraerDatoResponse")]
        System.Threading.Tasks.Task<string> TraerDatoAsync(string dato, string tipo, string valor, string tabla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComprobarDato", ReplyAction="http://tempuri.org/IService/ComprobarDatoResponse")]
        bool ComprobarDato(string referencia, string tabla, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ComprobarDato", ReplyAction="http://tempuri.org/IService/ComprobarDatoResponse")]
        System.Threading.Tasks.Task<bool> ComprobarDatoAsync(string referencia, string tabla, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarProducto", ReplyAction="http://tempuri.org/IService/AgregarProductoResponse")]
        bool AgregarProducto(string nombre, string unidad, int stock, int precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarProducto", ReplyAction="http://tempuri.org/IService/AgregarProductoResponse")]
        System.Threading.Tasks.Task<bool> AgregarProductoAsync(string nombre, string unidad, int stock, int precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarDatoProductos", ReplyAction="http://tempuri.org/IService/ActualizarDatoProductosResponse")]
        bool ActualizarDatoProductos(string nombre, int precio, int stock, string unidad, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarDatoProductos", ReplyAction="http://tempuri.org/IService/ActualizarDatoProductosResponse")]
        System.Threading.Tasks.Task<bool> ActualizarDatoProductosAsync(string nombre, int precio, int stock, string unidad, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarDomicilio", ReplyAction="http://tempuri.org/IService/AgregarDomicilioResponse")]
        bool AgregarDomicilio(string calle, string ciudad, string comuna, int cp, int iduser, int numerodomi, string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarDomicilio", ReplyAction="http://tempuri.org/IService/AgregarDomicilioResponse")]
        System.Threading.Tasks.Task<bool> AgregarDomicilioAsync(string calle, string ciudad, string comuna, int cp, int iduser, int numerodomi, string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BorrarPorId", ReplyAction="http://tempuri.org/IService/BorrarPorIdResponse")]
        bool BorrarPorId(int id, string tabla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BorrarPorId", ReplyAction="http://tempuri.org/IService/BorrarPorIdResponse")]
        System.Threading.Tasks.Task<bool> BorrarPorIdAsync(int id, string tabla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraerIdDomicilio", ReplyAction="http://tempuri.org/IService/TraerIdDomicilioResponse")]
        int TraerIdDomicilio(string calle, int numerodom, int cp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraerIdDomicilio", ReplyAction="http://tempuri.org/IService/TraerIdDomicilioResponse")]
        System.Threading.Tasks.Task<int> TraerIdDomicilioAsync(string calle, int numerodom, int cp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarDetalleCompra", ReplyAction="http://tempuri.org/IService/AgregarDetalleCompraResponse")]
        bool AgregarDetalleCompra(int cantidad, int total, int iddireccion, int idusuario, int metodopago);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarDetalleCompra", ReplyAction="http://tempuri.org/IService/AgregarDetalleCompraResponse")]
        System.Threading.Tasks.Task<bool> AgregarDetalleCompraAsync(int cantidad, int total, int iddireccion, int idusuario, int metodopago);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarStock", ReplyAction="http://tempuri.org/IService/ActualizarStockResponse")]
        bool ActualizarStock(int cantidad, string nombreprod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarStock", ReplyAction="http://tempuri.org/IService/ActualizarStockResponse")]
        System.Threading.Tasks.Task<bool> ActualizarStockAsync(int cantidad, string nombreprod);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TiendaVerduras.ValidacionLogin.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TiendaVerduras.ValidacionLogin.IService>, TiendaVerduras.ValidacionLogin.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool VerificarAcceso(string nombreusuario, string pass) {
            return base.Channel.VerificarAcceso(nombreusuario, pass);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarAccesoAsync(string nombreusuario, string pass) {
            return base.Channel.VerificarAccesoAsync(nombreusuario, pass);
        }
        
        public bool CrearUsuario(string email, string pass, string user, string TipoU, string run, string telefono) {
            return base.Channel.CrearUsuario(email, pass, user, TipoU, run, telefono);
        }
        
        public System.Threading.Tasks.Task<bool> CrearUsuarioAsync(string email, string pass, string user, string TipoU, string run, string telefono) {
            return base.Channel.CrearUsuarioAsync(email, pass, user, TipoU, run, telefono);
        }
        
        public string TraerDato(string dato, string tipo, string valor, string tabla) {
            return base.Channel.TraerDato(dato, tipo, valor, tabla);
        }
        
        public System.Threading.Tasks.Task<string> TraerDatoAsync(string dato, string tipo, string valor, string tabla) {
            return base.Channel.TraerDatoAsync(dato, tipo, valor, tabla);
        }
        
        public bool ComprobarDato(string referencia, string tabla, string tipo) {
            return base.Channel.ComprobarDato(referencia, tabla, tipo);
        }
        
        public System.Threading.Tasks.Task<bool> ComprobarDatoAsync(string referencia, string tabla, string tipo) {
            return base.Channel.ComprobarDatoAsync(referencia, tabla, tipo);
        }
        
        public bool AgregarProducto(string nombre, string unidad, int stock, int precio) {
            return base.Channel.AgregarProducto(nombre, unidad, stock, precio);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarProductoAsync(string nombre, string unidad, int stock, int precio) {
            return base.Channel.AgregarProductoAsync(nombre, unidad, stock, precio);
        }
        
        public bool ActualizarDatoProductos(string nombre, int precio, int stock, string unidad, int id) {
            return base.Channel.ActualizarDatoProductos(nombre, precio, stock, unidad, id);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarDatoProductosAsync(string nombre, int precio, int stock, string unidad, int id) {
            return base.Channel.ActualizarDatoProductosAsync(nombre, precio, stock, unidad, id);
        }
        
        public bool AgregarDomicilio(string calle, string ciudad, string comuna, int cp, int iduser, int numerodomi, string pais) {
            return base.Channel.AgregarDomicilio(calle, ciudad, comuna, cp, iduser, numerodomi, pais);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarDomicilioAsync(string calle, string ciudad, string comuna, int cp, int iduser, int numerodomi, string pais) {
            return base.Channel.AgregarDomicilioAsync(calle, ciudad, comuna, cp, iduser, numerodomi, pais);
        }
        
        public bool BorrarPorId(int id, string tabla) {
            return base.Channel.BorrarPorId(id, tabla);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarPorIdAsync(int id, string tabla) {
            return base.Channel.BorrarPorIdAsync(id, tabla);
        }
        
        public int TraerIdDomicilio(string calle, int numerodom, int cp) {
            return base.Channel.TraerIdDomicilio(calle, numerodom, cp);
        }
        
        public System.Threading.Tasks.Task<int> TraerIdDomicilioAsync(string calle, int numerodom, int cp) {
            return base.Channel.TraerIdDomicilioAsync(calle, numerodom, cp);
        }
        
        public bool AgregarDetalleCompra(int cantidad, int total, int iddireccion, int idusuario, int metodopago) {
            return base.Channel.AgregarDetalleCompra(cantidad, total, iddireccion, idusuario, metodopago);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarDetalleCompraAsync(int cantidad, int total, int iddireccion, int idusuario, int metodopago) {
            return base.Channel.AgregarDetalleCompraAsync(cantidad, total, iddireccion, idusuario, metodopago);
        }
        
        public bool ActualizarStock(int cantidad, string nombreprod) {
            return base.Channel.ActualizarStock(cantidad, nombreprod);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarStockAsync(int cantidad, string nombreprod) {
            return base.Channel.ActualizarStockAsync(cantidad, nombreprod);
        }
    }
}
